# Generated by Django 5.2.4 on 2025-07-28 16:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('subdomain', models.CharField(max_length=50, unique=True)),
                ('industry', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_name', models.CharField(default='Business Assistent', max_length=100)),
                ('agent_personality', models.TextField(default='Professioneel en behulpzaam')),
                ('monitoring_frequency', models.CharField(default='daily', max_length=20)),
                ('auto_approval_threshold', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('business_rules', models.JSONField(default=dict)),
                ('notification_settings', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
            ],
        ),
        migrations.CreateModel(
            name='AgentAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('analysis', 'Data Analyse'), ('recommendation', 'Aanbeveling'), ('alert', 'Waarschuwing'), ('automation', 'Automatisering')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('data_analysis', models.JSONField(blank=True, null=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Wachtend op goedkeuring'), ('approved', 'Goedgekeurd'), ('rejected', 'Afgewezen'), ('completed', 'Voltooid')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
            ],
        ),
        migrations.CreateModel(
            name='ClientTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=200)),
                ('original_filename', models.CharField(max_length=255)),
                ('columns_metadata', models.JSONField()),
                ('supabase_table_name', models.CharField(max_length=150)),
                ('row_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
            ],
            options={
                'unique_together': {('client', 'table_name')},
            },
        ),
        migrations.CreateModel(
            name='ClientKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('document_type', models.CharField(choices=[('csv_data', 'CSV Data'), ('pdf_doc', 'PDF Document'), ('text_doc', 'Text Document'), ('business_rules', 'Business Rules'), ('industry_knowledge', 'Industry Knowledge')], max_length=50)),
                ('metadata', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
                ('source_table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agent.clienttable')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('property_type', models.CharField(choices=[('apartment', 'Appartement'), ('house', 'Eengezinswoning'), ('commercial', 'Commercieel'), ('parking', 'Parkeerplaats')], max_length=50)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('purchase_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Laag'), ('medium', 'Gemiddeld'), ('high', 'Hoog'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('planned', 'Gepland'), ('in_progress', 'In uitvoering'), ('completed', 'Voltooid'), ('cancelled', 'Geannuleerd')], default='planned', max_length=20)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('contractor', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.property')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contract_start', models.DateField()),
                ('contract_end', models.DateField(blank=True, null=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('deposit', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('status', models.CharField(choices=[('active', 'Actief'), ('notice', 'Opzegging'), ('ended', 'BeÃ«indigd')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenants', to='agent.property')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('status', models.CharField(choices=[('pending', 'Wachtend'), ('paid', 'Betaald'), ('overdue', 'Achterstallig'), ('partial', 'Gedeeltelijk')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='agent.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='ClientUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(default='user', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'client')},
            },
        ),
    ]
